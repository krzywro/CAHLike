@inherits LayoutComponentBase
@implements IDisposable
@inject AppState state
@using KrzyWro.CAH.Client.Shared.Components


<PlayerNameEditor></PlayerNameEditor>

<div class="sidebar" style="@contentVisibility">
    <NavMenu />
</div>

<div class="main" style="@contentVisibility">
    <div class="top-row px-4">
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>
<div class="container h-100" style="@loaderVisibility">
    <Loader Text="Łączenie z serwerem"></Loader>
</div>

@code
{
    private string contentVisibility => state.CurrentState != Flow.State.Idle && state.Connected
        ? string.Empty
        : "display: none";

    private string loaderVisibility => state.CurrentState == Flow.State.Idle || !state.Connected
        ? string.Empty
        : "display: none";

    protected override async Task OnInitializedAsync()
    {
        state.Events.StateChanged += StateHasChanged;
        await state.RegisterPlayer();
    }

    public void Dispose() => state.Events.StateChanged -= StateHasChanged;
}
